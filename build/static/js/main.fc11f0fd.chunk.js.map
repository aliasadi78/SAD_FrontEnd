{"version":3,"sources":["index.css","Component/Material_RTL.js","Component/M_RTL.js","Component/Signin.js","Component/Signup.js","App.js","serviceWorker.js","index.js","fonts/Vazir.ttf","App.css"],"names":["module","exports","Material_RTL","jss","create","plugins","jssPreset","rtl","theme","createMuiTheme","direction","fontFamily","StylesProvider","ThemeProvider","dir","this","props","children","Component","RTL","SignIn","handleChange","e","setState","target","name","value","handleClickShowPassword","state","showPassword","handleMouseDownPassword","event","preventDefault","password","username","classes","p","pending","setPending","Container","component","maxWidth","style","CssBaseline","className","foo","paper","Avatar","avatar","Typography","variant","form","noValidate","Grid","container","spacing","item","xs","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","InputLabelProps","validators","errorMessages","InputProps","endAdornment","InputAdornment","position","AccountCircle","type","errorStyle","color","errorText","IconButton","padding","aria-label","onClick","onMouseDown","Visibility","VisibilityOff","root","LoadingButton","axios","post","then","result","console","log","token","data","localStorage","setItem","getItem","catch","error","alert","pendingPosition","backgrounColor","to","textDecoration","Button","backgroundColor","startIcon","Icon","useStyles","makeStyles","switch","display","marginTop","flexDirection","alignItems","borderRadius","opacity","palette","main","width","submit","React","useState","SignUp","handleSubmit","isLoading","firstname","lastname","email","repassword","ValidatorForm","addValidationRule","PersonAdd","Email","VpnKey","font","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fc11f0fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"material-icons\":\"index_material-icons_2GJXG\"};","import React, { Component } from \"react\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { StylesProvider, jssPreset } from '@material-ui/styles';\r\n\r\nclass Material_RTL extends Component {\r\n    render() {\r\n\r\n        const jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n        const theme = createMuiTheme({\r\n            direction: 'rtl',\r\n            fontFamily: 'Vazir',\r\n        });\r\n\r\n        return (\r\n\r\n            <StylesProvider jss={jss}>\r\n                <ThemeProvider theme={theme}>\r\n                    <div dir=\"rtl\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </ThemeProvider>\r\n            </StylesProvider>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Material_RTL;","import { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\nimport React from 'react';\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction RTL(props) {\r\n  return (\r\n    <StylesProvider jss={jss}>\r\n      {props.children}\r\n    </StylesProvider>\r\n  );\r\n}\r\n\r\nexport default RTL;","import Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React, { Component } from \"react\";\r\nimport Material_RTL from \"./Material_RTL\";\r\nimport axios from 'axios';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { AccountCircle, Visibility, VisibilityOff, login } from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport LoadingButton from '@material-ui/lab/LoadingButton';\r\nimport RTL from './M_RTL';\r\nimport Vazir from '../fonts/Vazir.ttf';\r\nclass SignIn extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            password: '',\r\n            username: '',\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            showPassword: !this.state.showPassword,\r\n        });\r\n    };\r\n\r\n    handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n        const [pending, setPending] = this.props.p;\r\n        const handleClick = e => {\r\n            setPending(true);\r\n            e.preventDefault();\r\n            axios.post(\"http://parham-backend.herokuapp.com/user/login\", this.state)\r\n                .then(result => {\r\n                    console.log(result);\r\n                    console.log(\"good\");\r\n                    const token = \"Bearer\" + result.data.token;\r\n                    localStorage.setItem('token', token);\r\n                    localStorage.getItem('token');\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    alert(\" خطا! نام کاربری یا رمز عبور شما اشتباه می باشد.لطفا تمام موارد * دار را پر کنید.\");\r\n                    setPending(false); \r\n                    console.log(\"bad\");\r\n\r\n                })\r\n        }\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\" style={{fontFamily: 'Vazir'}}>\r\n                <CssBaseline />\r\n                <div className={classes.foo}>\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\" style={{fontFamily: 'Vazir'}}>\r\n                            {'ورود'}\r\n                        </Typography>\r\n                        <Material_RTL>\r\n                            <RTL>\r\n\r\n                                <ValidatorForm className={classes.form} noValidate style={{fontFamily: 'Vazir'}}>\r\n                                    <Grid container spacing={2} component=\"h6\">\r\n                                        <Grid item xs={12} style={{fontFamily: 'Vazir'}}>\r\n                                            <TextValidator\r\n                                            style={{fontFamily: 'Vazir'}}\r\n                                                variant=\"outlined\"\r\n                                                margin=\"normal\"\r\n                                                required\r\n                                                fullWidth\r\n                                                id=\"username\"\r\n                                                label=\"نام کاربری\"\r\n                                                name=\"username\"\r\n                                                autoComplete=\"username\"\r\n                                                autoFocus\r\n                                                value={this.state.username}\r\n                                                onChange={this.handleChange}\r\n                                                InputLabelProps={{style:{fontFamily: 'Vazir'}}}\r\n                                                validators={['required', 'minStringLength:' + 6, 'matchRegexp:^[a-zA-Z0-9_]*$']}\r\n                                                errorMessages={['لطفا نام کاربری خود را وارد کنید', 'طول نام کاربری باید بیشتر از 6 باشد', 'a-z 0-9_ لطفا از حروف مجاز استفاده کنید']}\r\n                                                InputProps={{\r\n                                                    style:{fontFamily: 'Vazir'},\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"start\">\r\n                                                            <AccountCircle />\r\n                                                        </InputAdornment>\r\n                                                    ),\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <TextValidator\r\n                                            style={{fontFamily: 'Vazir'}}\r\n                                                variant=\"outlined\"\r\n                                                margin=\"normal\"\r\n                                                required\r\n                                                fullWidth\r\n                                                name=\"password\"\r\n                                                label=\"رمز عبور\"\r\n                                                type={this.state.showPassword ? 'text' : 'password'}\r\n                                                id=\"password\"\r\n                                                autoComplete=\"current-password\"\r\n                                                value={this.state.password}\r\n                                                onChange={this.handleChange}\r\n                                                InputLabelProps={{style:{fontFamily: 'Vazir'}}}\r\n                                                validators={['required', 'minStringLength:' + 8]}\r\n                                                errorMessages={['لطفا رمز عبور خود را وارد کنید', 'رمز عبور باید بیشتر از 8 حرف باشد']}\r\n                                                errorStyle={{style:{color: 'red',fontFamily: 'Vazir'}}}\r\n                                                errorText={{style:{color: 'red',fontFamily: 'Vazir'}}}\r\n                                                InputProps={{\r\n                                                    style:{fontFamily: 'Vazir'},\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"start\">\r\n                                                            <IconButton\r\n                                                                style={{ padding: '0px',color:'black' }}\r\n                                                                aria-label=\"toggle password visibility\"\r\n                                                                onClick={this.handleClickShowPassword}\r\n                                                                onMouseDown={this.handleMouseDownPassword}\r\n                                                            >\r\n                                                                {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>)\r\n                                                }}\r\n                                            /></Grid>\r\n                                    </Grid>\r\n                                    <br/>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid classes={classes.root} >\r\n                                            <LoadingButton onClick={handleClick} pendingPosition=\"center\" pending={pending} variant=\"contained\"  style={{backgrounColor: '#3d5a80',color: 'white',fontFamily: 'Vazir'}} fullWidth>\r\n                                            ورود\r\n                                            </LoadingButton>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    \r\n                                    <br/>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid>\r\n                                            <Link to=\"/signUp\" style={{color: 'white',textDecoration : 'none',fontFamily: 'Vazir'}}>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                fullWidth\r\n                                                style={{backgroundColor : '#0e918c',fontFamily: 'Vazir'}}\r\n                                                startIcon={<Icon>person_add</Icon>}\r\n                                            >\r\n                                                \r\n                                                    {\"ثبت نام\"}\r\n                                                 </Button></Link>\r\n                                        </Grid></Grid>\r\n                                    </Grid>\r\n                                </ValidatorForm>\r\n                            </RTL>\r\n                        </Material_RTL>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    switch: {\r\n        display: 'block',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        color: 'black',\r\n        backgroundColor: '#f5f5f5',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        opacity: '95%'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.main,\r\n        color: 'black',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n        color: 'black',\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        color: 'white',\r\n    },\r\n\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const p = React.useState(false);\r\n    return (\r\n        <SignIn classes={classes} p={p} />\r\n    )\r\n}","import React, {Component} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Material_RTL from \"./Material_RTL\";\r\nimport icon, {AccountCircle, Email, PersonAdd, Visibility, VisibilityOff, VpnKey,} from \"@material-ui/icons\"\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport  LoadingButton from '@material-ui/lab/LoadingButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport RTL from './M_RTL';\r\nimport Vazir from '../fonts/Vazir.ttf';\r\nclass SignUp extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            firstname: '',\r\n            lastname: '',\r\n            password: '',\r\n            email: '',\r\n            repassword: '',\r\n            showPassword: false,\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.setState({isLoading: true});\r\n        axios.post(\"https://parham-backend.herokuapp.com/user/signup\", this.state)\r\n            .then(result => {\r\n                console.log(result);\r\n                console.log(\"good\");\r\n                const token = \"Bearer\" + result.data.token;\r\n                localStorage.setItem('token',token);\r\n                localStorage.getItem('token');\r\n            }).catch(error => {\r\n            console.log(error);\r\n            console.log(\"bad\");\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    handleClickShowPassword = () => {\r\n    this.setState({\r\n        ...this.state,\r\n        showPassword: !this.state.showPassword,\r\n    });\r\n};\r\n\r\n    handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n};\r\n\r\n    componentDidMount() {\r\n        // custom rule will have name 'isPasswordMatch'\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if (value !== this.state.password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n        const [pending, setPending] = this.props.p;\r\n        const handleClick = e => {\r\n            setPending(true);\r\n            e.preventDefault();\r\n        // this.state.pending = true;\r\n        axios.post(\"http://parham-backend.herokuapp.com/user/signup\", this.state)\r\n            .then(result => {\r\n                console.log(result);\r\n                console.log(\"good\");\r\n                const token = \"Bearer\" + result.data.token;\r\n                localStorage.setItem('token', token);\r\n                localStorage.getItem('token');\r\n            }).catch(error => {\r\n            console.log(error);\r\n            alert('خطا! نام کاربری یا ایمیل شما قبلا استفاده شده لطفا تمام موارد * دار را پر کنید');\r\n            console.log(\"bad\");\r\n            setPending(false);\r\n        })}\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\" >\r\n                <CssBaseline/>\r\n                <div>\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <PersonAdd/>\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\" style={{fontFamily: 'Vazir'}}>\r\n                            ثبت نام\r\n                        </Typography>\r\n                        <Material_RTL>\r\n                            <RTL>\r\n                            <ValidatorForm className={classes.form} noValidate>\r\n                                <Grid container spacing={2} component=\"h6\">\r\n                                    <Grid item xs={12}>\r\n                                        <TextValidator\r\n                                            \r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"username\"\r\n                                            label={\"نام کاربری\"}\r\n                                            name=\"username\"\r\n                                            autoComplete=\"username\"\r\n                                            type=\"string\"\r\n                                            value={this.state.username}\r\n                                            onChange={this.handleChange}\r\n                                            InputLabelProps={{style:{fontFamily: 'Vazir'},}}\r\n                                            validators={['required', 'minStringLength:' + 6, 'matchRegexp:^[a-zA-Z0-9_]*$']}\r\n                                            errorMessages={['لطفا یک نام کاربری مناسب وارد کنید', 'طول نام کاربری باید بیشتر از 6 باشد', 'a-z 0-9_ لطفا از حروف مجاز استفاده کنید']}\r\n                                            InputProps={{\r\n                                                style:{fontFamily: 'Vazir'},\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <AccountCircle />\r\n                                                    </InputAdornment>\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextValidator\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"email\"\r\n                                            label=\"ایمیل\"\r\n                                            name=\"email\"\r\n                                            autoComplete=\"email\"\r\n                                            type=\"string\"\r\n                                            value={this.state.email}\r\n                                            onChange={this.handleChange}\r\n                                            InputLabelProps={{style:{fontFamily: 'Vazir'},}}\r\n                                            validators={['required', 'isEmail']}\r\n                                            errorMessages={['لطفا ایمیل خود را وارد کنید', 'ایمیل شما معتبر نیست']}\r\n                                            InputProps={{\r\n                                                style:{fontFamily: 'Vazir'},\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <Email />\r\n                                                    </InputAdornment>\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextValidator\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label={\"رمز عبور\"}\r\n                                            id=\"password\"\r\n                                            autoComplete=\"current-password\"\r\n                                            type={this.state.showPassword ? 'text' : 'password'}\r\n                                            value={this.state.password}\r\n                                            onChange={this.handleChange}\r\n                                            InputLabelProps={{style:{fontFamily: 'Vazir'},}}\r\n                                            validators={['required', 'minStringLength:' + 8]}\r\n                                            errorMessages={['لطفا رمز عبور خود را وارد کنید','رمز عبور باید بیشتر از 8 حرف باشد']}\r\n                                            InputProps={{\r\n                                                style:{fontFamily: 'Vazir'},\r\n                                                endAdornment:(\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                        style={{padding: '0px',color:'black'}}\r\n                                                        onClick={this.handleClickShowPassword}\r\n                                                        onMouseDown={this.handleMouseDownPassword}\r\n                                                    >\r\n                                                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>)\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextValidator\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"repassword\"\r\n                                            label=\"تایید رمز عبور\"\r\n                                            id=\"repassword\"\r\n                                            autoComplete=\"current-password\"\r\n                                            type={this.state.showPassword ? 'text' : 'password'}\r\n                                            value={this.state.repassword}\r\n                                            onChange={this.handleChange}\r\n                                            InputLabelProps={{style:{fontFamily: 'Vazir'}}}\r\n                                            validators={['isPasswordMatch', 'required']}\r\n                                            errorMessages={['رمز عبور مطابقت ندارد', 'لطفا رمز عبور خود را تکرار کنید']}\r\n                                            InputProps={{\r\n                                                style:{fontFamily: 'Vazir'},\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <VpnKey />\r\n                                                    </InputAdornment>\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <br/>\r\n                                <Grid container>\r\n                                     <Grid item xs={12}>\r\n                                        <Grid >\r\n                                            <LoadingButton onClick={handleClick} pendingPosition=\"center\" fullWidth pending={pending} variant=\"contained\" style={{color: 'white',fontFamily: 'Vazir'}}>\r\n                                                    {'ثبت نام'}\r\n                                            </LoadingButton>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <br/>\r\n                                <Grid container>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid >\r\n                                        <Link to=\"/signIn\" style={{color: 'white',textDecoration : 'none',}}>\r\n                                            \r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            style={{backgroundColor : '#0e918c', color: 'white',fontFamily: 'Vazir'}}\r\n                                            startIcon={<Icon>login</Icon>}\r\n                                            >\r\n                                                { 'ورود' }\r\n                                        \r\n                                        </Button></Link></Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ValidatorForm>\r\n                            </RTL>\r\n                        </Material_RTL>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        color: 'white',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        color: 'black',\r\n        backgroundColor: '#f5f5f5',\r\n        fontFamily: 'Vazir !important',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        opacity: '95%',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        // backgroundColor: theme.palette.success.main,\r\n        color: 'black',\r\n        fontFamily: 'Vazir !important',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n        color: 'black',\r\n        font: 'Vazir',\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        color: 'black',\r\n        fontFamily: 'Vazir !important',\r\n        backgroundColor: 'blue',\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const p = React.useState(false);\r\n    return (\r\n        <SignUp classes={classes} p={p}/>\r\n    )\r\n}","import React, {Component} from 'react';\nimport classes from './App.css';\nimport SignIn from \"./Component/Signin\";\nimport SignUp from \"./Component/Signup\";\n\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nclass App extends Component {\n    render() {\n        return (\n            <div className={classes.App}>\n                <Link to=\"/\"> </Link>\n                <Link to=\"/signIn\"> </Link>\n                <Link to=\"/signUp\"> </Link>\n                <Route path=\"/\" exact component={SignIn}/>\n                <Route path=\"/signIn\" exact component={SignIn}/>\n                <Route path=\"/signUp\" component={SignUp}/>\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../src/fonts/Vazir.ttf'\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Vazir.398b39dd.ttf\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App_1o-Fp\",\"Vec\":\"App_Vec_2sy67\",\"App-logo\":\"App_App-logo_3JCPt\",\"App-logo-spin\":\"App_App-logo-spin_RvI1J\",\"App-header\":\"App_App-header_3iH8L\",\"App-link\":\"App_App-link_13fTZ\",\"fo\":\"App_fo_3s898\"};"],"sourceRoot":""}