{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\AliAsadi\\\\Desktop\\\\SAD_FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\AliAsadi\\\\Desktop\\\\SAD_FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { borders, display, flexbox, grid, positions, palette, shadows, sizing, spacing, typography, handleBreakpoints } from '@material-ui/system';\nimport { deepmerge } from '@material-ui/utils';\n\nfunction objectsHaveSameKeys() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  var allKeys = objects.reduce(function (keys, object) {\n    return keys.concat(Object.keys(object));\n  }, []);\n  var union = new Set(allKeys);\n  return objects.every(function (object) {\n    return union.size === Object.keys(object).length;\n  });\n}\n\nvar filterProps = [].concat(_toConsumableArray(borders.filterProps), _toConsumableArray(display.filterProps), _toConsumableArray(flexbox.filterProps), _toConsumableArray(grid.filterProps), _toConsumableArray(positions.filterProps), _toConsumableArray(palette.filterProps), _toConsumableArray(shadows.filterProps), _toConsumableArray(sizing.filterProps), _toConsumableArray(spacing.filterProps), _toConsumableArray(typography.filterProps), ['sx']);\n\nvar getThemeValue = function getThemeValue(prop, value, theme) {\n  var _inputProps;\n\n  var inputProps = (_inputProps = {}, _defineProperty(_inputProps, prop, value), _defineProperty(_inputProps, \"theme\", theme), _inputProps);\n\n  if (borders.filterProps.indexOf(prop) !== -1) {\n    return borders(inputProps);\n  }\n\n  if (display.filterProps.indexOf(prop) !== -1) {\n    return display(inputProps);\n  }\n\n  if (flexbox.filterProps.indexOf(prop) !== -1) {\n    return flexbox(inputProps);\n  }\n\n  if (grid.filterProps.indexOf(prop) !== -1) {\n    return grid(inputProps);\n  }\n\n  if (positions.filterProps.indexOf(prop) !== -1) {\n    return positions(inputProps);\n  }\n\n  if (palette.filterProps.indexOf(prop) !== -1) {\n    return palette(inputProps);\n  }\n\n  if (shadows.filterProps.indexOf(prop) !== -1) {\n    return shadows(inputProps);\n  }\n\n  if (sizing.filterProps.indexOf(prop) !== -1) {\n    return sizing(inputProps);\n  }\n\n  if (spacing.filterProps.indexOf(prop) !== -1) {\n    return spacing(inputProps);\n  }\n\n  if (typography.filterProps.indexOf(prop) !== -1) {\n    return typography(inputProps);\n  }\n\n  return _defineProperty({}, prop, value);\n};\n\nexport var styleFunctionSx = function styleFunctionSx(styles, theme) {\n  if (!styles) return null;\n\n  if (typeof styles === 'function') {\n    return styles(theme);\n  }\n\n  if (typeof styles !== 'object') {\n    // value\n    return styles;\n  }\n\n  var css = {};\n  Object.keys(styles).forEach(function (styleKey) {\n    if (typeof styles[styleKey] === 'object') {\n      if (filterProps.indexOf(styleKey) !== -1) {\n        css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n      } else {\n        var breakpointsValues = handleBreakpoints({\n          theme: theme\n        }, styles[styleKey], function (x) {\n          return _defineProperty({}, styleKey, x);\n        });\n\n        if (objectsHaveSameKeys(breakpointsValues, styles[styleKey])) {\n          var transformedValue = styleFunctionSx(styles[styleKey], theme);\n          css[styleKey] = transformedValue;\n        } else {\n          css = deepmerge(css, breakpointsValues);\n        }\n      }\n    } else if (typeof styles[styleKey] === 'function') {\n      css = deepmerge(css, _defineProperty({}, styleKey, styles[styleKey](theme)));\n    } else {\n      css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n    }\n  });\n  return css;\n};\n\nvar styleFunction = function styleFunction(props) {\n  var result = {};\n  Object.keys(props).forEach(function (prop) {\n    if (filterProps.indexOf(prop) !== -1 && prop !== 'sx') {\n      result = deepmerge(result, getThemeValue(prop, props[prop], props.theme));\n    }\n  });\n  var sxValue = styleFunctionSx(props.sx, props.theme);\n  return deepmerge(result, sxValue);\n};\n\nstyleFunction.filterProps = filterProps;\nexport default styleFunction;","map":{"version":3,"sources":["C:/Users/AliAsadi/Desktop/SAD_FrontEnd/node_modules/@material-ui/core/Box/styleFunction.js"],"names":["borders","display","flexbox","grid","positions","palette","shadows","sizing","spacing","typography","handleBreakpoints","deepmerge","objectsHaveSameKeys","objects","allKeys","reduce","keys","object","concat","Object","union","Set","every","size","length","filterProps","getThemeValue","prop","value","theme","inputProps","indexOf","styleFunctionSx","styles","css","forEach","styleKey","breakpointsValues","x","transformedValue","styleFunction","props","result","sxValue","sx"],"mappings":"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","sourcesContent":["import { borders, display, flexbox, grid, positions, palette, shadows, sizing, spacing, typography, handleBreakpoints } from '@material-ui/system';\nimport { deepmerge } from '@material-ui/utils';\n\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\n\nconst filterProps = [...borders.filterProps, ...display.filterProps, ...flexbox.filterProps, ...grid.filterProps, ...positions.filterProps, ...palette.filterProps, ...shadows.filterProps, ...sizing.filterProps, ...spacing.filterProps, ...typography.filterProps, 'sx'];\n\nconst getThemeValue = (prop, value, theme) => {\n  const inputProps = {\n    [prop]: value,\n    theme\n  };\n\n  if (borders.filterProps.indexOf(prop) !== -1) {\n    return borders(inputProps);\n  }\n\n  if (display.filterProps.indexOf(prop) !== -1) {\n    return display(inputProps);\n  }\n\n  if (flexbox.filterProps.indexOf(prop) !== -1) {\n    return flexbox(inputProps);\n  }\n\n  if (grid.filterProps.indexOf(prop) !== -1) {\n    return grid(inputProps);\n  }\n\n  if (positions.filterProps.indexOf(prop) !== -1) {\n    return positions(inputProps);\n  }\n\n  if (palette.filterProps.indexOf(prop) !== -1) {\n    return palette(inputProps);\n  }\n\n  if (shadows.filterProps.indexOf(prop) !== -1) {\n    return shadows(inputProps);\n  }\n\n  if (sizing.filterProps.indexOf(prop) !== -1) {\n    return sizing(inputProps);\n  }\n\n  if (spacing.filterProps.indexOf(prop) !== -1) {\n    return spacing(inputProps);\n  }\n\n  if (typography.filterProps.indexOf(prop) !== -1) {\n    return typography(inputProps);\n  }\n\n  return {\n    [prop]: value\n  };\n};\n\nexport const styleFunctionSx = (styles, theme) => {\n  if (!styles) return null;\n\n  if (typeof styles === 'function') {\n    return styles(theme);\n  }\n\n  if (typeof styles !== 'object') {\n    // value\n    return styles;\n  }\n\n  let css = {};\n  Object.keys(styles).forEach(styleKey => {\n    if (typeof styles[styleKey] === 'object') {\n      if (filterProps.indexOf(styleKey) !== -1) {\n        css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n      } else {\n        const breakpointsValues = handleBreakpoints({\n          theme\n        }, styles[styleKey], x => ({\n          [styleKey]: x\n        }));\n\n        if (objectsHaveSameKeys(breakpointsValues, styles[styleKey])) {\n          const transformedValue = styleFunctionSx(styles[styleKey], theme);\n          css[styleKey] = transformedValue;\n        } else {\n          css = deepmerge(css, breakpointsValues);\n        }\n      }\n    } else if (typeof styles[styleKey] === 'function') {\n      css = deepmerge(css, {\n        [styleKey]: styles[styleKey](theme)\n      });\n    } else {\n      css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n    }\n  });\n  return css;\n};\n\nconst styleFunction = props => {\n  let result = {};\n  Object.keys(props).forEach(prop => {\n    if (filterProps.indexOf(prop) !== -1 && prop !== 'sx') {\n      result = deepmerge(result, getThemeValue(prop, props[prop], props.theme));\n    }\n  });\n  const sxValue = styleFunctionSx(props.sx, props.theme);\n  return deepmerge(result, sxValue);\n};\n\nstyleFunction.filterProps = filterProps;\nexport default styleFunction;"]},"metadata":{},"sourceType":"module"}