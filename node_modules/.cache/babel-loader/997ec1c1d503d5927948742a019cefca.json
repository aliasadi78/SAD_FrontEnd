{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        transform: 'rotate(0deg)'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, variant === 'determinate' ? classes.determinate : classes.indeterminate, color !== 'inherit' && classes[\"color\".concat(capitalize(color))]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, variant === 'determinate' ? classes.circleDeterminate : classes.circleIndeterminate, disableShrink && classes.circleDisableShrink),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","map":{"version":3,"sources":["C:/Users/AliAsadi/Desktop/SAD_FrontEnd/node_modules/@material-ui/core/CircularProgress/CircularProgress.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","chainPropTypes","withStyles","capitalize","SIZE","styles","theme","root","display","determinate","transition","transitions","create","indeterminate","animation","colorPrimary","color","palette","primary","main","colorSecondary","secondary","svg","circle","stroke","circleDeterminate","circleIndeterminate","strokeDasharray","strokeDashoffset","transform","circleDisableShrink","CircularProgress","forwardRef","props","ref","classes","className","disableShrink","size","style","thickness","value","variant","other","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","createElement","width","height","role","viewBox","cx","cy","r","fill","strokeWidth","process","env","NODE_ENV","propTypes","object","string","oneOf","bool","Error","oneOfType","number","name","flip"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nconst SIZE = 44;\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-block'\n  },\n\n  /* Styles applied to the root element if `variant=\"determinate\"`. */\n  determinate: {\n    transition: theme.transitions.create('transform')\n  },\n\n  /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n  indeterminate: {\n    animation: '$circular-rotate 1.4s linear infinite'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n  /* Styles applied to the `svg` element. */\n  svg: {\n    display: 'block' // Keeps the progress centered\n\n  },\n\n  /* Styles applied to the `circle` svg path. */\n  circle: {\n    stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n    // strokeLinecap: 'butt',\n\n  },\n\n  /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n  circleDeterminate: {\n    transition: theme.transitions.create('stroke-dashoffset')\n  },\n\n  /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n  circleIndeterminate: {\n    animation: '$circular-dash 1.4s ease-in-out infinite',\n    // Some default value that looks fine waiting for the animation to kicks in.\n    strokeDasharray: '80px, 200px',\n    strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n  },\n  '@keyframes circular-rotate': {\n    '0%': {\n      transform: 'rotate(0deg)'\n    },\n    '100%': {\n      transform: 'rotate(360deg)'\n    }\n  },\n  '@keyframes circular-dash': {\n    '0%': {\n      strokeDasharray: '1px, 200px',\n      strokeDashoffset: '0px'\n    },\n    '50%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-15px'\n    },\n    '100%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-125px'\n    }\n  },\n\n  /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n  circleDisableShrink: {\n    animation: 'none'\n  }\n});\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, variant === 'determinate' ? classes.determinate : classes.indeterminate, color !== 'inherit' && classes[`color${capitalize(color)}`]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, variant === 'determinate' ? classes.circleDeterminate : classes.circleIndeterminate, disableShrink && classes.circleDisableShrink),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);"]},"metadata":{},"sourceType":"module"}